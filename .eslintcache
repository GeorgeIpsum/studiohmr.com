[{"/Users/g1n/StudioHMR/studiohmr.com/src/index.tsx":"1","/Users/g1n/StudioHMR/studiohmr.com/src/App.tsx":"2"},{"size":500,"mtime":1607799716681,"results":"3","hashOfConfig":"4"},{"size":9735,"mtime":1607827779614,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fwm2ab",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/g1n/StudioHMR/studiohmr.com/src/index.tsx",[],"/Users/g1n/StudioHMR/studiohmr.com/src/App.tsx",["11","12"],"import React, { CSSProperties, useEffect, useState } from 'react';\nimport { ReactComponent as Bg } from './bg.svg';\nimport { ReactComponent as Bg2 } from './bg2.svg';\nimport hmr from './hmr.png';\nimport hmrw from './hmr.webp';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\n\nconst getThings = () => {\n  const a: [(HTMLElement | null), (HTMLElement | null)][] = [];\n  for (let i = 1; i < 15; i++) {\n    const b = document.getElementById(`bg_${ i }`);\n    const b2 = document.getElementById(`bg_${ i }_2`);\n    if (b || b2) a.push([b, b2]);\n  }\n  return a;\n};\n\nfunction easeInSine(x: number): number {\n  return 1 - Math.cos((x * Math.PI) / 2);\n}\n\n// function easeInCubic(x: number): number {\n//   return x * x * x;\n// }\n\n// function easeInCirc(x: number): number {\n//   return 1 - Math.sqrt(1 - Math.pow(x, 2));\n// }\n\nconst easingFunc = easeInSine;\n\nconst App: React.FC = () => {\n  return (<>\n    <Router>\n      <Switch>\n        <Route path=\"/sunrise\">\n          <Sunrise />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  </>);\n};\n\nconst Home: React.FC = () => {\n  const { height, width } = useWindowSize();\n  const imgSize = 0.3 * (height ?? 1200);\n  const middleHeight = (window.innerHeight / 2) - (imgSize / 2);\n  const middleWidth = (window.innerWidth / 2) - (imgSize / 2);\n  const [useTransform, setUseTransform] = useState<boolean>(false);\n  const [firstTransform, setFirstTransform] = useState<boolean>(false);\n  const [showText, setShowText] = useState<boolean>(false);\n  const [animating, setAnimating] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fills = getThings();\n    if (Array.isArray(fills)) {\n      for (let i = 0; i < fills.length; i++) {\n        const fill = fills[i];\n        setTimeout(() => {\n          if (fill[0]) {\n            fill[0].style.opacity = '1';\n            fill[0].style.translate = '0px 0px';\n          }\n          if (fill[1]) {\n            fill[1].style.opacity = '1';\n            fill[1].style.translate = '0px 0px';\n          }\n        }, (200 * fills.length * easingFunc((i + 1) / fills.length)));\n      }\n    }\n    setTimeout(() => {\n      setFirstTransform(true);\n    }, 200);\n    setTimeout(() => {\n      setUseTransform(true);\n      setAnimating(true);\n      setTimeout(() => {\n        setAnimating(false);\n      }, 2500);\n    }, 1700);\n    setTimeout(() => {\n      setShowText(true);\n    }, 2500);\n  }, []);\n\n  const imageStyle: CSSProperties = {\n    height: imgSize,\n    width: imgSize,\n    pointerEvents: 'none'\n  };\n\n  const scale = (height ?? 500) < 500 ? 0.5 : 0.3;\n\n  const transform: CSSProperties = {\n    transform: `translate(-${ (window.innerWidth / 2 - (imgSize * scale) / 2) - 5 }px, -${ (window.innerHeight / 2 - (imgSize * scale) / 2) - 5 }px) scale(${ scale.toString() })`\n  };\n\n  let pictureStyle: CSSProperties = {\n    position: 'absolute',\n    top: middleHeight + (firstTransform ? 0 : 30),\n    left: middleWidth,\n    transition: `scale 1s ease-out, opacity 1s ease-in, top 1s ease-in${ animating ? ', transform 2s ease-in-out' : '' }`,\n    opacity: firstTransform ? '1' : '0'\n  };\n\n  if (useTransform) {\n    pictureStyle = {\n      ...pictureStyle,\n      ...transform\n    };\n  }\n\n  const h1Style: CSSProperties = {\n    position: 'absolute',\n    top: 5,\n    left: imgSize * scale + 5,\n    color: 'white',\n    height: imgSize * scale,\n    display: 'flex',\n    alignItems: 'center',\n    opacity: showText ? '1' : '0',\n    transition: 'opacity 0.5s ease-in'\n  };\n\n  const useHotDog = (height ?? 0) > (width ?? 0);\n  const bgStyle: CSSProperties = { height: '100%', width: '100%' };\n\n  return (<>\n    <div style={{ width: '100%', height: '100vh', display: 'flex', justifyContent: 'flex-end', alignItems: 'flex-start', flexFlow: 'row', background: 'black' }}>\n      <Bg style={{ ...bgStyle, display: useHotDog ? 'none' : 'block' }} />\n      <Bg2 style={{ ...bgStyle, display: useHotDog ? 'block' : 'none' }} />\n    </div>\n    <picture id=\"logo\" style={pictureStyle}>\n      <source style={imageStyle} type=\"image/webp\" srcSet={hmrw} />\n      <img style={imageStyle} src={hmr} alt=\"hmr\" />\n    </picture>\n    <div style={h1Style}><h1 style={{ fontFamily: 'sans-serif', fontSize: 24 }}>STUDIO HMR</h1></div>\n  </>);\n};\n\nconst Sunrise: React.FC = () => {\n  const { width: w, height: h } = useWindowSize();\n  const width = w ?? window.innerWidth;\n  const height = h ?? window.innerHeight;\n\n  useEffect(() => {\n    setTimeout(() => {\n      const sun = document.getElementById(\"OH_PUTRID_LIGHT\");\n      if (sun) {\n        sun.style.bottom = '31%';\n      }\n\n      const sky = document.getElementById(\"let_the_sky_fall\");\n      if (sky) {\n        sky.style.background = '#fa7b620F';\n      }\n\n      const bg = document.getElementById(\"dont_let_go\");\n      if (bg) {\n        bg.style.opacity = '1';\n      }\n    }, 50);\n  }, []);\n\n  return (<div id=\"dont_let_go\" style={{ opacity: 0, transition: 'opacity 0.5s ease' }}>\n    <div id=\"let_the_sky_fall\" style={{ maxWidth: '100%', height, background: '#fa7b6200', position: 'relative', overflowX: 'hidden', transition: 'background 4s ease' }}>\n      <div id=\"OH_PUTRID_LIGHT\" style={{ position: 'absolute', right: '50%', bottom: '11%', height: 30, width: 30, borderRadius: 30, backgroundColor: '#fa7b62', transition: 'bottom 4s ease' }} />\n      <div id=\"faun\" className=\"bbg\">\n        <div id=\"dawn_3\" className=\"bg\" />\n      </div>\n      <div id=\"flora\" className=\"bbg\">\n        <div id=\"dawn_2\" className=\"bg\" />\n      </div>\n      <div id=\"flor\" className=\"bbg\">\n        <div id=\"dawn\" className=\"bg\" />\n      </div>\n      <svg xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <clipPath id=\"forest_1\" clipPathUnits=\"objectBoundingBox\">\n            <path d=\"M0,0.076 L0.01,0.046,0.019,0.059,0.028,0.096,0.034,0.102,0.045,0.099,0.047,0,0.056,0.083,0.064,0.122,0.076,0.132,0.09,0.135,0.099,0.122,0.107,0.083,0.111,0.056,0.117,0.112 H0.126 L0.131,0.135,0.14,0.152,0.146,0.175,0.151,0.145,0.158,0.168,0.165,0.116,0.17,0.125,0.178,0.053,0.184,0.109,0.192,0.122,0.2,0.149,0.205,0.185,0.221,0.191,0.23,0.221,0.24,0.254,0.251,0.29,0.268,0.297,0.278,0.33,0.282,0.366,0.293,0.386,0.313,0.366,0.325,0.34,0.335,0.376,0.35,0.393,0.356,0.383,0.368,0.419,0.385,0.422,0.391,0.406,0.401,0.422,0.414,0.419,0.426,0.446,0.453,0.442,0.457,0.403,0.461,0.383,0.467,0.416,0.473,0.406,0.482,0.432,0.49,0.429,0.498,0.409,0.508,0.327,0.514,0.38 H0.523 L0.536,0.389,0.55,0.403,0.558,0.333,0.564,0.373,0.574,0.35,0.585,0.347,0.613,0.314,0.624,0.248,0.629,0.277,0.639,0.287,0.644,0.277,0.646,0.297,0.653,0.317,0.66,0.215,0.667,0.271,0.67,0.304,0.675,0.244,0.682,0.284 H0.694 L0.697,0.323,0.705,0.33,0.713,0.244,0.717,0.271,0.725,0.297,0.734,0.294,0.745,0.284,0.754,0.307,0.773,0.277,0.785,0.3,0.799,0.281,0.811,0.254,0.813,0.271,0.821,0.3,0.83,0.205,0.842,0.162,0.842,0.215,0.857,0.231,0.887,0.208,0.892,0.234,0.901,0.182,0.908,0.241 H0.917 L0.92,0.215,0.926,0.198,0.928,0.241,0.936,0.231,0.944,0.198,0.944,0.238,0.955,0.224,0.959,0.264,0.971,0.208,0.973,0.297,0.98,0.211,1,0.304,1,1.0 L-1,1\" />\n          </clipPath>\n          <clipPath id=\"forest_2\" clipPathUnits=\"objectBoundingBox\">\n            <path d=\"M0,0.081 L0.014,0.111,0.025,0.104,0.05,0.146,0.063,0.123,0.095,0.153,0.106,0.139,0.11,0.148,0.114,0.111,0.13,0.1,0.141,0.113,0.153,0.146,0.163,0.137,0.173,0.153 H0.203 L0.225,0.157,0.244,0.164,0.257,0.171 H0.275 L0.291,0.181,0.308,0.188 H0.325 L0.337,0.208 H0.355 L0.367,0.25,0.386,0.264,0.4,0.285,0.417,0.322,0.436,0.361,0.444,0.37,0.459,0.398,0.464,0.382,0.482,0.391,0.493,0.387,0.503,0.396,0.516,0.41,0.527,0.412,0.532,0.426,0.539,0.41,0.552,0.391,0.568,0.396,0.58,0.4,0.592,0.38,0.608,0.382,0.62,0.37,0.628,0.333,0.643,0.317,0.659,0.31,0.671,0.322,0.682,0.282,0.695,0.243,0.718,0.197,0.744,0.148,0.768,0.1,0.777,0.076,0.795,0.09,0.807,0.086,0.84,0.109,0.881,0.037,0.897,0.046,0.931,0.032,0.94,0.019 H0.951 L0.966,0.012,0.976,0.03,1,0.023,1,1 L-0,1\" />\n          </clipPath>\n          <clipPath id=\"forest_3\" clipPathUnits=\"objectBoundingBox\">\n            <path d=\"M0,0 C0.036,0.107,0.076,0.07,0.076,0.07 S0.166,0.064,0.189,0.102 S0.214,0.191,0.297,0.219 S0.367,0.202,0.463,0.187 S0.579,0.232,0.634,0.214 S0.728,0.109,0.802,0.069 S1,0.033,1,0.041 S1,1,1,1 L-0,1 S-0,0,0,0\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </div>\n    <div style={{ height }} className=\"next\"></div>\n  </div>);\n};\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = useState<{ width?: number, height?: number; }>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nfunction useMousePosition() {\n  const [mousePosition, setMousePosition] = useState<{ mouseX?: number, mouseY?: number; }>({\n    mouseX: undefined,\n    mouseY: undefined\n  });\n\n  const handleMouseMove = (ev: MouseEvent) => {\n    setMousePosition({\n      mouseX: ev.clientX,\n      mouseY: ev.clientY\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n  }, []);\n\n  return mousePosition;\n}\n\nexport default App;\n",{"ruleId":"13","severity":1,"message":"14","line":151,"column":9,"nodeType":"15","messageId":"16","endLine":151,"endColumn":14},{"ruleId":"13","severity":1,"message":"17","line":232,"column":10,"nodeType":"15","messageId":"16","endLine":232,"endColumn":26},"@typescript-eslint/no-unused-vars","'width' is assigned a value but never used.","Identifier","unusedVar","'useMousePosition' is defined but never used."]